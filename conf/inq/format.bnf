// https://github.com/awalterschulze/katydid/blob/master/asm/asm.bnf


_lineComment : '#' {.} '\n' ;
!comment : _lineComment;

!whitespace: ' ' | '\t' | '\n' | '\r' ;
_letter : 'a'-'z' | 'A'-'Z' ;

_digit : '0'-'9' ;

_idchar : _letter | _digit | '_' | '-' | '.';

sizecode : 'k' | 'm' | 'g' | 't' | 'p' | '%';
uint_lit : _digit {_digit};

id : (_letter) {_idchar} ;
operator : '>' | '<';

<< import "inspeqtor/conf/inq/ast" >>

/*

Examples:

check service mysql
  if memory(rss) > 6g for 2 cycles then alert

check service redis
  if memory(rss) > 1g for 2 cycles then alert
  if cpu(user) > 95% for 2 cycles then alert

check host
  if cpu(user) > 400% for 2 cycles then alert
  if swap(usage) > 20% for 2 cycles then alert

*/

Check
  : Preamble Checktype id RuleList                  << ast.NewProcessCheck($1, $2, $3), nil >>
  | Preamble "host" RuleList                        << ast.NewHostCheck($2), nil >>;

Preamble :
 : "check"          << $0, nil >> // Monit compatibility
 | "inspect"        << $0, nil >>;

Checktype :
 : "process"        << $0, nil >>
 | "service"        << $0, nil >>;

Action
  : "restart"       << $0, nil >>
  | "alert"         << $0, nil >>;

IntAmount
  : uint_lit            << ast.ToUint64($0) >>;

HumanAmount
  : uint_lit            << ast.HumanAmount($0, nil) >>
  | uint_lit sizecode   << ast.HumanAmount($0, $1) >>;

Metric
  : id                  << ast.Metric($0, nil) >>
  | id "(" id ")"       << ast.Metric($0, $2) >>;

Rule
  : "if" Metric operator HumanAmount "then" Action  << ast.NewRule($1, $2, $3, $5, uint64(1)), nil >>
  | "if" Metric operator HumanAmount "for" IntAmount "cycles" "then" Action  << ast.NewRule($1, $2, $3, $8, $5), nil >>;

RuleList
  : Rule                              << ast.NewRuleList($0), nil >>
  | RuleList Rule                     << ast.AppendRule($0, $1), nil >>;
